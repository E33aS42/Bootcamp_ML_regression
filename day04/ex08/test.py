import numpy as np
from my_logistic_regression import MyLogisticRegression as MyLR

print(" * Example 1:\n")
X = np.array([[1., 1., 2., 3.], [5., 8., 13., 21.], [3., 5., 9., 14.]])
Y = np.array([[1], [0], [1]])
thetas = np.array([[2], [0.5], [7.1], [-4.3], [2.09]])
mylr = MyLR(thetas)

print(f"get_params_: \n{mylr.get_params_()}\n")
y_hat = mylr.predict_(X)
print(f"predict_: \n{y_hat}\n")
print(f"loss_elem_:\n{mylr.loss_elem_(Y, y_hat)}\n")
print(f"loss: \n{mylr.loss_(Y, y_hat)}\n")
print("fit_ with resulting thetas coefficients:")
mylr.fit_(X, Y)
print(mylr.theta)
y_hat = mylr.predict_(X)
print(f"predict_: \n{y_hat}\n")
print(f"loss: \n{mylr.loss_(Y, y_hat)}\n")

print(" * Example 2:\n")
alpha = 0.1
max_iter = 10000
print("set_param_:")
mylr.set_params_(theta=thetas, alpha=alpha, max_iter=max_iter)
print("fit_ with resulting thetas coefficients:")
mylr.fit_(X, Y)
print(mylr.theta)
y_hat = mylr.predict_(X)
print(f"\npredict_: \n{y_hat}\n")
print(f"loss_elem_:\n{mylr.loss_elem_(Y, y_hat)}\n")
print(f"loss: \n{mylr.loss_(Y, y_hat)}\n")

print(" * Example 3:\n")
theta = np.array([[-2.4], [-1.5], [0.3], [-1.4], [0.7]])
mylr3 =  MyLR(theta, lambda_=5.0, max_iter=1000)
print(f"Model penality: {mylr3.penality}")
print(f"get_params_: \n{mylr3.get_params_()}\n")
print("fit_ with resulting thetas coefficients:")
mylr3.fit_(X, Y)
y_hat = mylr3.predict_(X)
print(f"\npredict_: \n{y_hat}\n")
print(f"loss_elem_:\n{mylr3.loss_elem_(Y, y_hat)}\n")
print(f"loss: \n{mylr3.loss_(Y, y_hat)}\n")

mylr3.set_params_(theta, lambda_=5.0, max_iter=1000, penality=None)
print(f"Model penality: {mylr3.penality}")
print(f"get_params_: \n{mylr3.get_params_()}\n")

theta = np.array([[1], [1], [1], [1], [1]])
mylr3.set_params_(theta, alpha=0.001, max_iter=1000, lambda_=2.0)
print(f"get_params_: \n{mylr3.get_params_()}\n")
print("fit_ with resulting thetas coefficients:")
mylr3.fit_(X, Y)
y_hat = mylr3.predict_(X)
print(f"\npredict_: \n{y_hat}\n")
print(f"loss_elem_:\n{mylr3.loss_elem_(Y, y_hat)}\n")
print(f"loss: \n{mylr3.loss_(Y, y_hat)}\n")


print(" * Example 4:\n")
mylr4 = MyLR(theta, alpha=0.001, max_iter=10000, lambda_=1.0)
print(f"get_params_: \n{mylr4.get_params_()}\n")
print("fit_ with resulting thetas coefficients:")
mylr4.fit_(X, Y)
y_hat = mylr4.predict_(X)
print(f"\npredict_: \n{y_hat}\n")
print(f"loss_elem_:\n{mylr4.loss_elem_(Y, y_hat)}\n")
print(f"loss: \n{mylr4.loss_(Y, y_hat)}\n")